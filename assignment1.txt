#!/bin/bash mkdir a new directory for this test.
mkdir forRNAseq cd forRNAseq
#copy all the raw data(*.fq.gz) to the new directory.
cp /localdisk/data/BPSM/Assignment1/fastq/*.fq.gz . cp /localdisk/data/BPSM/Assignment1/fastq/fqfiles .
#to use fastqc wherever I am.
echo export PATH=$PATH:~/software/FastQC >> ~/.bashrc
#[MODULE 1]fastqc those raw data(in gzip compressed fastq format).
find . -name "*fq\.gz" | xargs -n1 fastqc
#[MODULE 2] then every fastq file will generate a .html and a .zip. You can open the html file for assessment.
#####If you don't want to look at so many html files, you can skip this!!!!!!!!!!######
find . -name "*html" | xargs -n1 firefox
#to use fastqc wherever I am
echo export PATH=$PATH:~/software/bowtie2 >> ~/.bashrc
#copy genome sequence for alignment, and unzip it.
cp /localdisk/data/BPSM/Assignment1/Tbb_genome/Tb927_genome.fasta.gz . gunzip Tb927_genome.fasta.gz
#before use bowtie2, establishing a index is need.
bowtie2-build Tb927_genome.fasta index
#[MODULE 3]use bowtie2. every pairs(those 1.fq and 2.fq) will generate one .sam file. For example: for 216_L8_1.fq and 
#216_L8_2.fq, 216.sam will appear.
gunzip *fq.gz for var1 in *_L8_1.fq;
 do for var2 in *_L8_2.fq;
   do
    if [ ${var1%%_*} == ${var2%%_*} ]; then
     bowtie2 -p 4 -x index -1 $var1 -2 $var2 -S ${var1%%_*}.sam;
    fi;
   done;
  done
#[MODULE 3]convert the output to indexed "bam" format. For example, for 216.sam, a 216.bam and a 216.bam.bai will 
#appear.
for x in *.sam; do samtools sort $x > ${x%.*}.bam done for y in *.bam; do samtools index $y done
#copy "bedfile" which contains the information about the gene locations in the genome
cp /localdisk/data/BPSM/Assignment1/Tbbgenes.bed .
#[MODULE 4]use bedtools(don't need to set PATH). output two textfiles, for these data have different orgins. [MODULE 
#4]For 216,218,219, they are from slender stage. For 220,221,222, they are from stumpy stage. [MODULE 4]$4 is the gene 
#name, $7,$8,$9... are data we need for futher calculation.
bedtools multicov -bams 21*.bam -bed Tbbgenes.bed | cut -f4,7- > slender_samples.txt bedtools multicov -bams 22*.bam 
-bed Tbbgenes.bed | cut -f4,7- > stumpy_samples.txt
#calculate the mean of these two for every line (gene).
cat slender_samples.txt | awk '{sum = 0; for (i = 2; i <= NF; i++) sum += $i; sum /= (NF-1); print $1"\t"sum}' >> 
slender_mean.txt cat stumpy_samples.txt | awk '{sum = 0; for (i = 2; i <= NF; i++) sum += $i; sum /= (NF-1); print 
$1"\t"sum}' >> stumpy_mean.txt
#[MODULE 5]output a text tab-delimited file, use the mean of slender and stumpy with every gene.
echo -e 'gene name\tmean for slender sample\tmean for stumpy samples' >> 
average_of_the_counts_per_gene_for_each_group.txt awk 'NR==FNR{a[$1]=$2;next}{print $0"\t"a[$1]}' stumpy_mean.txt 
slender_mean.txt >> average_of_the_counts_per_gene_for_each_group.txt
# THE FILE average_of_the_counts_per_gene_for_each_group.txt IS WHAT WE NEED!
